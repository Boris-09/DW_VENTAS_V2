{
	"name": "df_silver_clientes",
	"properties": {
		"folder": {
			"name": "Silver"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sql_Clientes_BD_GEN",
						"type": "DatasetReference"
					},
					"name": "BD"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_Clientes_location",
						"type": "DatasetReference"
					},
					"name": "location"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_Clientes",
						"type": "DatasetReference"
					},
					"name": "clientes"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_silver_clientes",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "cast1"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				},
				{
					"name": "join1"
				},
				{
					"name": "cast2"
				},
				{
					"name": "join2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CID as string,",
				"          BDATE as string,",
				"          GEN as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> BD",
				"source(output(",
				"          CID as string,",
				"          CNTRY as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> location",
				"source(output(",
				"          CST_ID as string,",
				"          CST_KEY as string,",
				"          CST_FIRSTNAME as string,",
				"          CST_LASTNAME as string,",
				"          CST_MARITAL_STATUS as string,",
				"          CST_GNRD as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> clientes",
				"BD derive(CID = replace(CID, 'NAS', '')) ~> derivedColumn1",
				"location derive(CID = replace(CID, '-', '')) ~> derivedColumn2",
				"clientes derive(CST_FIRSTNAME = trim(CST_FIRSTNAME),",
				"          CST_LASTNAME = trim(CST_LASTNAME)) ~> derivedColumn3",
				"derivedColumn1 cast(output(",
				"          CID as string,",
				"          BDATE as date 'yyyy-MM-dd'",
				"     ),",
				"     errors: true) ~> cast1",
				"cast2 select(mapColumn(",
				"          CID_location = CID,",
				"          CNTRY",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"derivedColumn3 select(mapColumn(",
				"          CST_ID,",
				"          CST_KEY,",
				"          CST_FIRSTNAME,",
				"          CST_LASTNAME,",
				"          CST_MARITAL_STATUS,",
				"          GEN = CST_GNRD",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3, select2 join(CST_KEY == CID_location,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"derivedColumn2 cast(output(",
				"          CID as string,",
				"          CNTRY as string",
				"     ),",
				"     errors: true) ~> cast2",
				"join1, cast1 join(CST_KEY == CID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CST_ID as integer,",
				"          CST_KEY as string,",
				"          CST_FIRSTNAME as string,",
				"          CST_LASTNAME as string,",
				"          CST_MARITAL_STATUS as string,",
				"          CST_GNRD as string,",
				"          CNTRY as string,",
				"          BDATE as date,",
				"          GEN as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}