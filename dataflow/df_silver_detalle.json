{
	"name": "df_silver_detalle",
	"properties": {
		"folder": {
			"name": "Silver"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sql_Detalle_ventas",
						"type": "DatasetReference"
					},
					"name": "detalle"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_silver_detalle_venta",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "cast1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SLS_ORD_NUM as string,",
				"          SLS_PRD_KEY as string,",
				"          SLS_CUST_ID as string,",
				"          SLS_ORDER_DT as string,",
				"          SLS_SHIP_DT as string,",
				"          SLS_SALES as string,",
				"          SLS_QUANTITY as string,",
				"          SLS_PRICE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> detalle",
				"detalle derive(SLS_PRD_KEY = trim(SLS_PRD_KEY),",
				"          SLS_ORDER_DT = toDate(toString(SLS_ORDER_DT), 'yyyyMMdd'),",
				"          SLS_SHIP_DT = toDate(toString(SLS_SHIP_DT), 'yyyyMMdd')) ~> derivedColumn1",
				"derivedColumn1 cast(output(",
				"          SLS_ORDER_DT as date",
				"     ),",
				"     errors: true) ~> cast1",
				"cast1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SLS_ORD_NUM as string,",
				"          SLS_PRD_KEY as string,",
				"          SLS_CUST_ID as string,",
				"          SLS_ORDER_DT as string,",
				"          SLS_SHIP_DT as string,",
				"          SLS_SALES as integer,",
				"          SLS_QUANTITY as integer,",
				"          SLS_PRICE as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}